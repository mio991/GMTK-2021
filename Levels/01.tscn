[gd_scene load_steps=47 format=2]

[ext_resource path="res://Scripts/Level/Level.gd" type="Script" id=1]
[ext_resource path="res://Assets/TileSet.tres" type="TileSet" id=2]
[ext_resource path="res://Prefabs/Characters/Moon.tscn" type="PackedScene" id=3]
[ext_resource path="res://Prefabs/WallsRed.tscn" type="PackedScene" id=4]
[ext_resource path="res://Prefabs/Links/LinkerStation.tscn" type="PackedScene" id=5]
[ext_resource path="res://Prefabs/Items/Rock_Yellow.tscn" type="PackedScene" id=6]
[ext_resource path="res://Prefabs/Characters/Sun.tscn" type="PackedScene" id=7]
[ext_resource path="res://Prefabs/SunExit.tscn" type="PackedScene" id=8]
[ext_resource path="res://Prefabs/Items/Rock_Green.tscn" type="PackedScene" id=9]
[ext_resource path="res://Prefabs/WallsBlue.tscn" type="PackedScene" id=10]
[ext_resource path="res://Prefabs/Items/Preassure_Plate_Blue.tscn" type="PackedScene" id=11]
[ext_resource path="res://Assets/Sheets/entities.png" type="Texture" id=12]
[ext_resource path="res://Assets/Sheets/rooms.png" type="Texture" id=13]
[ext_resource path="res://Prefabs/MoonExit.tscn" type="PackedScene" id=14]

[sub_resource type="AtlasTexture" id=1]
flags = 4
atlas = ExtResource( 13 )
region = Rect2( 784, 64, 39, 25 )

[sub_resource type="AtlasTexture" id=2]
flags = 4
atlas = ExtResource( 13 )
region = Rect2( 617, 69, 52, 27 )

[sub_resource type="AtlasTexture" id=3]
flags = 4
atlas = ExtResource( 12 )
region = Rect2( 162, 188, 27, 20 )

[sub_resource type="AtlasTexture" id=4]
flags = 4
atlas = ExtResource( 13 )
region = Rect2( 1315, 0, 32, 12 )

[sub_resource type="AtlasTexture" id=5]
flags = 4
atlas = ExtResource( 13 )
region = Rect2( 1224, 76, 24, 9 )

[sub_resource type="AtlasTexture" id=6]
flags = 4
atlas = ExtResource( 13 )
region = Rect2( 1322, 71, 20, 19 )

[sub_resource type="AtlasTexture" id=7]
flags = 4
atlas = ExtResource( 13 )
region = Rect2( 1283, 85, 22, 11 )

[sub_resource type="AtlasTexture" id=8]
flags = 4
atlas = ExtResource( 13 )
region = Rect2( 1238, 24, 6, 4 )

[sub_resource type="AtlasTexture" id=9]
flags = 4
atlas = ExtResource( 13 )
region = Rect2( 1253, 13, 61, 19 )

[sub_resource type="AtlasTexture" id=10]
flags = 4
atlas = ExtResource( 13 )
region = Rect2( 840, 42, 53, 14 )

[sub_resource type="AtlasTexture" id=11]
flags = 4
atlas = ExtResource( 13 )
region = Rect2( 835, 96, 64, 56 )

[sub_resource type="AtlasTexture" id=12]
flags = 4
atlas = ExtResource( 13 )
region = Rect2( 707, 64, 63, 57 )

[sub_resource type="AtlasTexture" id=13]
flags = 4
atlas = ExtResource( 13 )
region = Rect2( 910, 80, 80, 60 )

[sub_resource type="AtlasTexture" id=14]
flags = 4
atlas = ExtResource( 13 )
region = Rect2( 780, 40, 50, 50 )

[sub_resource type="Shader" id=31]
code = "shader_type canvas_item;

uniform vec4 color : hint_color = vec4(1.0);
uniform float width : hint_range(0, 10) = 1.0;
uniform int pattern : hint_range(0, 2) = 0; // diamond, circle, square
uniform bool inside = false;
uniform bool add_margins = true; // only useful when inside is false

void vertex() {
	if (add_margins) {
		VERTEX += (UV * 2.0 - 1.0) * width;
	}
}

bool hasContraryNeighbour(vec2 uv, vec2 texture_pixel_size, sampler2D texture) {
	for (float i = -ceil(width); i <= ceil(width); i++) {
		float x = abs(i) > width ? width * sign(i) : i;
		float offset;
		
		if (pattern == 0) {
			offset = width - abs(x);
		} else if (pattern == 1) {
			offset = floor(sqrt(pow(width + 0.5, 2) - x * x));
		} else if (pattern == 2) {
			offset = width;
		}
		
		for (float j = -ceil(offset); j <= ceil(offset); j++) {
			float y = abs(j) > offset ? offset * sign(j) : j;
			vec2 xy = uv + texture_pixel_size * vec2(x, y);
			
			if ((xy != clamp(xy, vec2(0.0), vec2(1.0)) || texture(texture, xy).a == 0.0) == inside) {
				return true;
			}
		}
	}
	
	return false;
}

void fragment() {
	vec2 uv = UV;
	
	if (add_margins) {
		vec2 texture_pixel_size = vec2(1.0) / (vec2(1.0) / TEXTURE_PIXEL_SIZE + vec2(width * 2.0));
		
		uv = (uv - texture_pixel_size * width) * TEXTURE_PIXEL_SIZE / texture_pixel_size;
		
		if (uv != clamp(uv, vec2(0.0), vec2(1.0))) {
			COLOR.a = 0.0;
		} else {
			COLOR = texture(TEXTURE, uv);
		}
	} else {
		COLOR = texture(TEXTURE, uv);
	}
	
	if ((COLOR.a > 0.0) == inside && hasContraryNeighbour(uv, TEXTURE_PIXEL_SIZE, TEXTURE)) {
		COLOR.rgb = inside ? mix(COLOR.rgb, color.rgb, color.a) : color.rgb;
		COLOR.a += (1.0 - COLOR.a) * color.a;
	}
}"

[sub_resource type="ShaderMaterial" id=32]
resource_local_to_scene = true
shader = SubResource( 31 )
shader_param/color = Color( 1, 1, 1, 1 )
shader_param/width = 0.0
shader_param/pattern = 0
shader_param/inside = true
shader_param/add_margins = false

[sub_resource type="AtlasTexture" id=15]
flags = 4
atlas = ExtResource( 13 )
region = Rect2( 617, 37, 52, 27 )

[sub_resource type="AtlasTexture" id=16]
flags = 4
atlas = ExtResource( 13 )
region = Rect2( 1123, 32, 64, 32 )

[sub_resource type="AtlasTexture" id=17]
flags = 4
atlas = ExtResource( 13 )
region = Rect2( 1223, 39, 20, 25 )

[sub_resource type="AtlasTexture" id=18]
flags = 4
atlas = ExtResource( 13 )
region = Rect2( 1224, 109, 24, 9 )

[sub_resource type="AtlasTexture" id=19]
flags = 4
atlas = ExtResource( 13 )
region = Rect2( 1189, 5, 28, 54 )

[sub_resource type="AtlasTexture" id=20]
flags = 4
atlas = ExtResource( 13 )
region = Rect2( 1220, 100, 60, 30 )

[sub_resource type="AtlasTexture" id=21]
flags = 4
atlas = ExtResource( 13 )
region = Rect2( 1223, 39, 20, 25 )

[sub_resource type="AtlasTexture" id=22]
flags = 4
atlas = ExtResource( 13 )
region = Rect2( 1544, 166, 23, 23 )

[sub_resource type="AtlasTexture" id=23]
flags = 4
atlas = ExtResource( 13 )
region = Rect2( 1737, 165, 23, 23 )

[sub_resource type="AtlasTexture" id=24]
flags = 4
atlas = ExtResource( 13 )
region = Rect2( 1485, 38, 23, 24 )

[sub_resource type="AtlasTexture" id=25]
flags = 4
atlas = ExtResource( 13 )
region = Rect2( 1705, 70, 23, 23 )

[sub_resource type="AtlasTexture" id=26]
flags = 4
atlas = ExtResource( 13 )
region = Rect2( 1672, 72, 23, 14 )

[sub_resource type="AtlasTexture" id=27]
flags = 4
atlas = ExtResource( 13 )
region = Rect2( 1549, 138, 13, 13 )

[sub_resource type="AtlasTexture" id=28]
flags = 4
atlas = ExtResource( 13 )
region = Rect2( 1513, 102, 23, 23 )

[sub_resource type="Shader" id=29]
code = "shader_type canvas_item;

uniform vec4 color : hint_color = vec4(1.0);
uniform float width : hint_range(0, 10) = 1.0;
uniform int pattern : hint_range(0, 2) = 0; // diamond, circle, square
uniform bool inside = false;
uniform bool add_margins = true; // only useful when inside is false

void vertex() {
	if (add_margins) {
		VERTEX += (UV * 2.0 - 1.0) * width;
	}
}

bool hasContraryNeighbour(vec2 uv, vec2 texture_pixel_size, sampler2D texture) {
	for (float i = -ceil(width); i <= ceil(width); i++) {
		float x = abs(i) > width ? width * sign(i) : i;
		float offset;
		
		if (pattern == 0) {
			offset = width - abs(x);
		} else if (pattern == 1) {
			offset = floor(sqrt(pow(width + 0.5, 2) - x * x));
		} else if (pattern == 2) {
			offset = width;
		}
		
		for (float j = -ceil(offset); j <= ceil(offset); j++) {
			float y = abs(j) > offset ? offset * sign(j) : j;
			vec2 xy = uv + texture_pixel_size * vec2(x, y);
			
			if ((xy != clamp(xy, vec2(0.0), vec2(1.0)) || texture(texture, xy).a == 0.0) == inside) {
				return true;
			}
		}
	}
	
	return false;
}

void fragment() {
	vec2 uv = UV;
	
	if (add_margins) {
		vec2 texture_pixel_size = vec2(1.0) / (vec2(1.0) / TEXTURE_PIXEL_SIZE + vec2(width * 2.0));
		
		uv = (uv - texture_pixel_size * width) * TEXTURE_PIXEL_SIZE / texture_pixel_size;
		
		if (uv != clamp(uv, vec2(0.0), vec2(1.0))) {
			COLOR.a = 0.0;
		} else {
			COLOR = texture(TEXTURE, uv);
		}
	} else {
		COLOR = texture(TEXTURE, uv);
	}
	
	if ((COLOR.a > 0.0) == inside && hasContraryNeighbour(uv, TEXTURE_PIXEL_SIZE, TEXTURE)) {
		COLOR.rgb = inside ? mix(COLOR.rgb, color.rgb, color.a) : color.rgb;
		COLOR.a += (1.0 - COLOR.a) * color.a;
	}
}"

[sub_resource type="ShaderMaterial" id=30]
resource_local_to_scene = true
shader = SubResource( 29 )
shader_param/color = Color( 1, 1, 1, 1 )
shader_param/width = 0.0
shader_param/pattern = 0
shader_param/inside = true
shader_param/add_margins = false

[node name="Level01" type="Node2D"]
script = ExtResource( 1 )
initial_character = NodePath("SunWorld/Sun")

[node name="SunWorld" type="Node2D" parent="."]

[node name="TileMap" type="TileMap" parent="SunWorld"]
position = Vector2( 176, 56 )
tile_set = ExtResource( 2 )
cell_size = Vector2( 32, 32 )
collision_layer = 8
collision_mask = 8
format = 1
tile_data = PoolIntArray( 0, 2, 196608, 1, 2, 1, 2, 20, 0, 3, 20, 1, 4, 2, 1, 5, 2, 65538, 6, 15, 0, 7, 2, 0, 8, 2, 65538, 65536, 18, 0, 65537, 12, 1, 65538, 20, 65536, 65539, 20, 65537, 65540, 18, 0, 65541, 12, 0, 65542, 2, 65536, 65543, 15, 0, 65544, 2, 0, 131072, 2, 131072, 131073, 12, 1, 131074, 2, 65536, 131075, 2, 65537, 131076, 2, 3, 131077, 2, 0, 131078, 2, 65536, 131079, 2, 65537, 131080, 2, 0, 196608, 2, 131073, 196609, 2, 196608, 196610, 2, 1, 196611, 2, 2, 196612, 2, 65537, 196613, 18, 0, 196614, 17, 0, 196615, 17, 1, 196616, 18, 0, 262144, 2, 0, 262145, 2, 0, 262146, 2, 131072, 262147, 2, 0, 262148, 2, 0, 262149, 2, 131072, 262150, 17, 65536, 262151, 17, 65537, 262152, 2, 1, 327680, 12, 65537, 327681, 2, 65536, 327682, 2, 196609, 327683, 12, 1, 327684, 18, 0, 327685, 2, 65538, 327686, 2, 65539, 327687, 2, 131072, 327688, 2, 131072 )

[node name="Walls" parent="SunWorld" instance=ExtResource( 4 )]
position = Vector2( 320, 152 )

[node name="Connector1" parent="SunWorld" instance=ExtResource( 5 )]
position = Vector2( 192, 72 )

[node name="SunExit" parent="SunWorld" instance=ExtResource( 8 )]
position = Vector2( 256, 56 )
rotation = 3.57628e-06

[node name="Rock" parent="SunWorld" instance=ExtResource( 6 )]
position = Vector2( 224, 72 )

[node name="Deko" type="Node2D" parent="SunWorld"]

[node name="Sprite" type="Sprite" parent="SunWorld/Deko"]
position = Vector2( 359.497, 201.782 )
texture = SubResource( 1 )

[node name="Sprite2" type="Sprite" parent="SunWorld/Deko"]
position = Vector2( 160, 136 )
rotation = -1.56976
texture = SubResource( 2 )

[node name="Sprite3" type="Sprite" parent="SunWorld/Deko"]
position = Vector2( 322.976, 68.7585 )
texture = SubResource( 3 )

[node name="Sprite4" type="Sprite" parent="SunWorld/Deko"]
position = Vector2( 480.817, 99.3899 )
rotation = 1.33644
texture = SubResource( 4 )

[node name="Sprite5" type="Sprite" parent="SunWorld/Deko"]
position = Vector2( 320.515, 44.6645 )
texture = SubResource( 5 )

[node name="Sprite6" type="Sprite" parent="SunWorld/Deko"]
position = Vector2( 161.834, 99.7254 )
scale = Vector2( 1.14158, 1.52162 )
texture = SubResource( 6 )

[node name="Sprite8" type="Sprite" parent="SunWorld/Deko"]
position = Vector2( 461.819, 265.657 )
texture = SubResource( 7 )

[node name="Sprite9" type="Sprite" parent="SunWorld/Deko"]
position = Vector2( 386.909, 40.8652 )
texture = SubResource( 8 )

[node name="Sprite15" type="Sprite" parent="SunWorld/Deko"]
position = Vector2( 334.526, 266.22 )
texture = SubResource( 9 )

[node name="Sprite10" type="Sprite" parent="SunWorld/Deko"]
position = Vector2( 278.375, 70.8633 )
rotation = 3.06648
scale = Vector2( 1.04176, 0.968182 )
texture = SubResource( 10 )

[node name="Sprite11" type="Sprite" parent="SunWorld/Deko"]
position = Vector2( 449.482, 75.8098 )
rotation = -0.0184963
scale = Vector2( 0.447576, 0.711019 )
texture = SubResource( 11 )

[node name="Sprite12" type="Sprite" parent="SunWorld/Deko"]
position = Vector2( 208, 136 )
rotation = -1.57469
scale = Vector2( 1.04176, 0.968182 )
texture = SubResource( 12 )

[node name="Sprite13" type="Sprite" parent="SunWorld/Deko"]
position = Vector2( 224.905, 217.548 )
rotation = 3.13116
scale = Vector2( 1.15951, 0.817885 )
texture = SubResource( 13 )

[node name="Sprite14" type="Sprite" parent="SunWorld/Deko"]
position = Vector2( 369.337, 97.9466 )
rotation = 3.13116
scale = Vector2( 1.04176, 0.968182 )
texture = SubResource( 13 )

[node name="Sprite16" type="Sprite" parent="SunWorld/Deko"]
position = Vector2( 418.464, 213.325 )
rotation = 3.13116
scale = Vector2( 1.04176, 0.968182 )
texture = SubResource( 13 )

[node name="Sprite17" type="Sprite" parent="SunWorld/Deko"]
position = Vector2( 290.634, 151.934 )
rotation = -1.57225
scale = Vector2( 1.04176, 0.968182 )
texture = SubResource( 13 )

[node name="Sprite18" type="Sprite" parent="SunWorld/Deko"]
position = Vector2( 439.637, 131.576 )
rotation = -1.57225
scale = Vector2( 1.04176, 0.968182 )
texture = SubResource( 14 )

[node name="Sun" parent="SunWorld" instance=ExtResource( 7 )]
material = SubResource( 32 )
position = Vector2( 192, 136 )

[node name="MoonWorld" type="Node2D" parent="."]

[node name="TileMap" type="TileMap" parent="MoonWorld"]
position = Vector2( 176, 352 )
tile_set = ExtResource( 2 )
cell_size = Vector2( 32, 32 )
collision_layer = 8
collision_mask = 8
format = 1
tile_data = PoolIntArray( 0, 2, 196608, 1, 2, 0, 2, 19, 0, 3, 19, 1, 4, 21, 0, 5, 8, 0, 6, 2, 65537, 7, 13, 0, 8, 8, 0, 65536, 8, 1, 65537, 2, 0, 65538, 19, 65536, 65539, 19, 65537, 65540, 21, 0, 65541, 21, 0, 65542, 2, 0, 65543, 2, 0, 65544, 2, 65538, 131072, 2, 131072, 131073, 2, 196608, 131074, 2, 0, 131075, 2, 0, 131076, 21, 0, 131077, 21, 0, 131078, 2, 3, 131079, 2, 3, 131080, 8, 65536, 196608, 2, 131073, 196609, 2, 1, 196610, 2, 0, 196611, 8, 65536, 196612, 21, 0, 196613, 21, 0, 196614, 2, 65538, 196615, 18, 0, 196616, 2, 1, 262144, 2, 0, 262145, 8, 0, 262146, 21, 0, 262147, 21, 0, 262148, 21, 0, 262149, 21, 0, 262150, 2, 1, 262151, 2, 65538, 262152, 2, 0, 327680, 15, 0, 327681, 2, 196609, 327682, 21, 65536, 327683, 21, 0, 327684, 21, 0, 327685, 21, 65537, 327686, 2, 65536, 327687, 2, 131072, 327688, 2, 131072 )

[node name="Walls" parent="MoonWorld" instance=ExtResource( 10 )]
position = Vector2( 320, 448 )

[node name="Connector2" parent="MoonWorld" instance=ExtResource( 5 )]
position = Vector2( 192, 368 )

[node name="MoonExit" parent="MoonWorld" instance=ExtResource( 14 )]
position = Vector2( 256, 352 )

[node name="Rock2" parent="MoonWorld" instance=ExtResource( 9 )]
position = Vector2( 224, 368 )

[node name="PreassurePlate" parent="MoonWorld" instance=ExtResource( 11 )]
position = Vector2( 448, 528 )

[node name="Deko" type="Node2D" parent="MoonWorld"]
position = Vector2( 320, 448 )
rotation = 1.5708

[node name="Sprite2" type="Sprite" parent="MoonWorld/Deko"]
position = Vector2( -15.9995, 160 )
rotation = 3.12471
texture = SubResource( 15 )

[node name="Sprite4" type="Sprite" parent="MoonWorld/Deko"]
position = Vector2( 74.9017, 157.58 )
scale = Vector2( 0.851563, 0.8125 )
texture = SubResource( 16 )

[node name="Sprite5" type="Sprite" parent="MoonWorld/Deko"]
position = Vector2( -108.243, -0.763458 )
texture = SubResource( 17 )

[node name="Sprite6" type="Sprite" parent="MoonWorld/Deko"]
position = Vector2( 112.148, 70.6435 )
texture = SubResource( 18 )

[node name="Sprite7" type="Sprite" parent="MoonWorld/Deko"]
position = Vector2( 78.4594, -48.5667 )
texture = SubResource( 19 )

[node name="Sprite8" type="Sprite" parent="MoonWorld/Deko"]
position = Vector2( -111.641, 119.4 )
rotation = 1.55523
scale = Vector2( 1, 1 )
texture = SubResource( 20 )

[node name="Sprite9" type="Sprite" parent="MoonWorld/Deko"]
position = Vector2( -108.348, -66.8647 )
rotation = 3.02233
texture = SubResource( 21 )

[node name="Sprite15" type="Sprite" parent="MoonWorld/Deko"]
position = Vector2( -49.5571, 157.544 )
scale = Vector2( 0.571428, 0.518518 )
texture = SubResource( 19 )

[node name="Sprite11" type="Sprite" parent="MoonWorld/Deko"]
position = Vector2( 16.7356, -99.6789 )
rotation = 1.56141
scale = Vector2( 1.04176, 0.968182 )
texture = SubResource( 22 )

[node name="Sprite12" type="Sprite" parent="MoonWorld/Deko"]
position = Vector2( -15.6241, 31.1017 )
rotation = 3.13116
scale = Vector2( 1.04176, 0.968182 )
texture = SubResource( 23 )

[node name="Sprite13" type="Sprite" parent="MoonWorld/Deko"]
position = Vector2( -71.7488, -120.515 )
rotation = 3.13116
scale = Vector2( 1.04176, 0.968182 )
texture = SubResource( 24 )

[node name="Sprite14" type="Sprite" parent="MoonWorld/Deko"]
position = Vector2( -49.8241, -64.8371 )
rotation = 3.13116
scale = Vector2( 1.04176, 0.968182 )
texture = SubResource( 25 )

[node name="Sprite16" type="Sprite" parent="MoonWorld/Deko"]
position = Vector2( -16.5804, 90.6843 )
rotation = 3.13116
scale = Vector2( 1.04176, 0.968182 )
texture = SubResource( 26 )

[node name="Sprite17" type="Sprite" parent="MoonWorld/Deko"]
position = Vector2( 47.8134, -97.1593 )
rotation = -1.57225
scale = Vector2( 1.04176, 0.968182 )
texture = SubResource( 27 )

[node name="Sprite18" type="Sprite" parent="MoonWorld/Deko"]
position = Vector2( -43.6841, 55.5795 )
rotation = -1.57225
scale = Vector2( 1.04176, 0.968182 )
texture = SubResource( 28 )

[node name="Moon" parent="MoonWorld" instance=ExtResource( 3 )]
material = SubResource( 30 )
position = Vector2( 192, 432 )
sprite = NodePath("Sprite")
